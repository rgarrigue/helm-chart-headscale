nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []

headscale:
  image:
    repository: headscale/headscale
    pullPolicy: IfNotPresent
    tag: latest
    command:
      - serve
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  service:
    type: ClusterIP
    port: 80
  volumeMounts:
    - name: headscale-data
      mountPath: /var/lib/headscale
    - name: headscale-config
      mountPath: /etc/headscale
  livenessProbe:
    httpGet:
      path: /health
      port: http
  readinessProbe:
    httpGet:
      path: /health
      port: http

headplane:
  enabled: false
  image:
    repository: ghcr.io/tale/headplane
    pullPolicy: IfNotPresent
    tag: latest
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  service:
    type: ClusterIP
    port: 3000
  volumeMounts:
    - name: headscale-config
      mountPath: /etc/headscale

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

config:
  headplane:
    api:
      disableLogin: "false"
      # Ignored if secret.create: false
      key: abcdefghijklmnopqrstuvwxyz
    debug: "false"

  cookie:
    # Only set this to false if you aren't behind a reverse proxy
    secure: false
    # Ignored if secret.create: false
    value: abcdefghijklmnopqrstuvwxyz

  secret:
    # Either let the chart create the secret 
    create: true
    # Or create it yourself 
    name: headscale-secret

replicaCount: 1

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - headscale.local
  tls: []
  #  - secretName: headscale-tls
  #    hosts:
  #      - headscale.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes:
  - name: headscale-data
    persistentVolumeClaim:
      claimName: headscale-data
  - name: headscale-config
    persistentVolumeClaim:
      claimName: headscale-config

nodeSelector: {}

tolerations: []

affinity: {}
